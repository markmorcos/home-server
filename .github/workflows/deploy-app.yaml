name: deploy-app

on:
  repository_dispatch:
    types:
      - deploy-infrastructure-admin
      - deploy-portfolio
      - deploy-booking
      - deploy-url-shortener

jobs:
  deploy:
    runs-on: ubuntu-24.04-arm

    steps:
      - name: Checkout client
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.client_payload.repository }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Prepare build information
        id: prepare-build-information
        run: |
          configFile="${{ github.event.client_payload.config_file }}"
          projectName=$(yq -r '.project.name' "$configFile")
          deploymentVersion="${{ github.event.client_payload.version }}"
          repositoryPath=$(yq -r '.repository.path' "$configFile")

          echo "PROJECT_NAME=${projectName}" >> $GITHUB_OUTPUT
          echo "DEPLOYMENT_VERSION=${deploymentVersion}" >> $GITHUB_OUTPUT
          echo "REPOSITORY_PATH=${repositoryPath}" >> $GITHUB_OUTPUT

      - name: Checkout infrastructure
        uses: actions/checkout@v4
        with:
          path: infrastructure

      - name: Build and push Docker image
        run: |
          PROJECT_NAME=${{ steps.prepare-build-information.outputs.PROJECT_NAME }} \
          DEPLOYMENT_VERSION=${{ steps.prepare-build-information.outputs.DEPLOYMENT_VERSION }} \
          REPOSITORY_PATH=${{ steps.prepare-build-information.outputs.REPOSITORY_PATH }} \
          ./infrastructure/scripts/build.sh

      - name: Configure VPN
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TAILSCALE_CLIENT_ID }}
          oauth-secret: ${{ secrets.TAILSCALE_CLIENT_SECRET }}
          tags: tag:ci

      - name: Create SSH key
        run: |
          echo "${{ secrets.RASPBERRY_PI_SSH_KEY }}" > /tmp/key
          chmod 600 /tmp/key

      - name: Run deployment script on Raspberry Pi
        run: |
          configFile="${{ github.event.client_payload.config_file }}"
          deploymentToken="${{ github.event.client_payload.token }}"
          infrastructurePAT="${{ secrets.INFRASTRUCTURE_PAT }}"
          githubUsername="${{ github.actor }}"

          (cat infrastructure/scripts/deploy.sh; echo; cat $configFile) \
            | ssh -i /tmp/key -o StrictHostKeyChecking=no \
            "${{ secrets.RASPBERRY_PI_USERNAME }}@${{ secrets.RASPBERRY_PI_HOST }}" \
            "KUBECONFIG=~/.kube/config \
            DEPLOYMENT_TOKEN='$deploymentToken' \
            GITHUB_USERNAME='$githubUsername' \
            INFRASTRUCTURE_PAT='$infrastructurePAT' \
            bash -s"
