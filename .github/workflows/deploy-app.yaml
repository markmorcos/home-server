name: Application Deployment Dispatch

on:
  repository_dispatch:
    types: [deploy-infrastructure-admin, deploy-portfolio]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout client
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.client_payload.repository_name }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          projectName=${{ github.event.client_payload.project_name }}
          deploymentVersion=${{ github.event.client_payload.deployment_version }}
          repositoryPath="${{ github.event.client_payload.repository_path }}"
          repositoryPath=${repositoryPath:-"."}

          cd ${repositoryPath}

          docker buildx create --use
          docker buildx build \
            --platform linux/arm64,linux/amd64 \
            -t markmorcos/${projectName}:${deploymentVersion} \
            -t markmorcos/${projectName}:latest \
            --cache-from type=registry,ref=markmorcos/${projectName}:cache \
            --cache-to type=registry,ref=markmorcos/${projectName}:cache,mode=max \
            --push \
            -f Dockerfile \
            .

      - name: Checkout infrastructure
        uses: actions/checkout@v4
        with:
          path: infrastructure

      - name: Create SSH key
        run: |
          echo "${{ secrets.RASPBERRY_PI_SSH_KEY }}" > /tmp/key
          chmod 600 /tmp/key

      - name: Run deployment script on Raspberry Pi
        run: |
          deploymentToken=${{ github.event.client_payload.deployment_token }}

          cat infrastructure/scripts/deploy.sh | ssh -i /tmp/key -o StrictHostKeyChecking=no \
            "${{ secrets.RASPBERRY_PI_USERNAME }}@${{ secrets.RASPBERRY_PI_HOST }}" \
            "KUBECONFIG=~/.kube/config DEPLOYMENT_TOKEN='${deploymentToken}' bash -s"
